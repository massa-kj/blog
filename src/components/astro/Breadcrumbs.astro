---
import { BASE_URL, BREADCRUMBS_DEFINITION } from '../../utils/share';
import { getLangFromUrl } from '../../i18n/utils';

const { path, isInvalidPage }: { path: string, isInvalidPage: boolean } = Astro.props;
const lang = getLangFromUrl(Astro.url);

// Split a path to generate a breadcrumb array
const parts = path
  .split('/')
  // remove empty item
  .filter(Boolean)
  .map((part, index, array) => {
    const href = '/' + array.slice(0, index + 1).join('/');
    return {
      label: BREADCRUMBS_DEFINITION[part] ?? part,
      href: index < array.length - 1 ? `${href}/` : undefined,  // No link at the end
    };
  })
  // home links to articles
  .map((item) => {
    if (item.label === 'Home') {
      item.href = `${BASE_URL}${lang}/articles/`;
    }
	return item;
  });
---

<nav class="text-sm" aria-label="Breadcrumb">
  <ol class="flex flex-wrap">
    {isInvalidPage ? (
      <li class="flex items-center gap-1">
        <a href={`${BASE_URL}${lang}/articles`} class="hoverable-text">Home</a>
        <span>&gt;</span>
        <span class="">404</span>
      </li>
    ) : (
      parts.map((crumb, i) => (
        <li class="flex items-center" key={i}>
          {i > 0 && <span>&gt;</span>}
          {crumb.href ? (
            <a href={crumb.href} class="hoverable-text px-3 py-5">{crumb.label}</a>
          ) : (
            <span class="px-3 py-3">{crumb.label}</span>
          )}
        </li>
      ))
    )}
  </ol>
</nav>

